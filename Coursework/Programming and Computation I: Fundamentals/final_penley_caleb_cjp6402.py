# -*- coding: utf-8 -*-
"""Final_Penley_Caleb_cjp6402.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t4LRoZKcLNVn-2Mr-zOFICvbl9gZvo9T
"""

#Caleb Penley- Final CMPSC 131

#1
def num_sum(N):
  sum = 0
  while N > 0:
    dig = N%10
    sum += dig
    N //= 10
  return sum
#2
def reverse_words(words):
  revwords = ''
  for i in range(len(words)-1,-1,-1):
      revwords += words[i]
  return revwords
#3
def last_index_in_list(lst, n):
  last = "number does not exist in list"
  for i in range(len(lst)):
    if lst[i] == n:
      last = i
  return last
#4
def make_hills(file_path, lst):
  f = open(file_path, 'a')
  for i in range(len(lst)):
    if lst[i] >= 0:
      f.write('*' * lst[i]+ '\n')
    else:
      f.write('\n')
  f.close()
#5
def indexed_math(lst1, lst2):
  min_lst = lst1
  if lst1 >= lst2:
    min_lst = lst2
  new_lst = []
  for i in range(len(min_lst)):
    if i % 2 == 0:
      new_lst += [lst1[i]*lst2[i]]
    else:
      new_lst += [lst2[i]-lst1[i]]
  return new_lst